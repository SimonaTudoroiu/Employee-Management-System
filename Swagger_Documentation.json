{
  "openapi": "3.1.0",
  "info": {
    "title": "Employee Management API",
    "description": "APIs for managing employees",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Leave",
      "description": "Operations related to managing leave requests, including applying, approving, rejecting, and retrieving leave data."
    },
    {
      "name": "Employee",
      "description": "Operations for managing employee data, including creating, updating, retrieving, and deleting employee records."
    },
    {
      "name": "Attendance",
      "description": "Manage employee attendance records, including check-ins, check-outs, and retrieval of attendance history."
    },
    {
      "name": "Department",
      "description": "Manage operations related to departments, including creation, retrieval, and deletion of departments, as well as fetching employees within a department."
    },
    {
      "name": "Review",
      "description": "Operations related to performance reviews, including adding and retrieving reviews for employees."
    },
    {
      "name": "Project",
      "description": "Operations related to managing projects, including creation, deletion, employee assignment, and project retrieval."
    }
  ],
  "paths": {
    "/leaves/{id}/reject": {
      "put": {
        "tags": [
          "Leave"
        ],
        "summary": "Reject a leave request",
        "description": "Rejects the leave request for the employee identified by the provided leave request ID.",
        "operationId": "rejectLeave",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the leave request to reject",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Leave request rejected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveDTO"
                }
              }
            }
          },
          "404": {
            "description": "Leave request not found for the given ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/leaves/{id}/approve": {
      "put": {
        "tags": [
          "Leave"
        ],
        "summary": "Approve a leave request",
        "description": "Approves the leave request for the employee identified by the provided leave request ID.",
        "operationId": "approveLeave",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the leave request to approve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Leave request approved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveDTO"
                }
              }
            }
          },
          "404": {
            "description": "Leave request not found for the given ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Retrieve an employee by ID",
        "description": "Fetches detailed information about a specific employee by their unique ID, including personal and job-related details.",
        "operationId": "getEmployeeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the employee to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee found and details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          },
          "404": {
            "description": "No employee found with the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update an existing employee's details",
        "description": "Updates the information of an employee based on their ID. The details provided will overwrite the existing data for that employee.",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the employee whose details need to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Employee details successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid employee data provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found with the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete an employee record",
        "description": "Deletes the employee record identified by the given ID from the system.",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the employee to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee record successfully deleted"
          },
          "404": {
            "description": "Employee not found with the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/reviews": {
      "post": {
        "tags": [
          "Review"
        ],
        "summary": "Submit a performance review for an employee",
        "description": "Submit a new performance review for another employee, including feedback on performance and a score from 1 to 5.",
        "operationId": "addPerformanceReview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Performance review added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid review data provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found with the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get all projects",
        "description": "Retrieves a list of all projects in the system, including key details such as project name, deadline and associated department.",
        "operationId": "getProjects",
        "responses": {
          "200": {
            "description": "List of projects retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred during input validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create a new project",
        "description": "Allows users to create a new project by providing necessary details such as project name, deadline and associated department",
        "operationId": "createProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Project successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid project data provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found for the given ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred during input validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/assign": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Assign employees to a project",
        "description": "Assigns a list of employees to a specific project, linking them to the project by their employee IDs.",
        "operationId": "assignEmployeesToProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project to which employees will be assigned",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "List of employee IDs to assign to the project",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Employees successfully assigned to the project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            }
          },
          "404": {
            "description": "Project or one or more employees not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "One or more employees not in the same department as the project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred during input validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/leaves": {
      "post": {
        "tags": [
          "Leave"
        ],
        "summary": "Submit a new leave request",
        "description": "Allows employees to submit a new leave request with the provided leave details such as start date, end date, and reason for leave.",
        "operationId": "applyForLeave",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeaveDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Leave request submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid leave data provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found with the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/employees": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get a list of all employees",
        "description": "Retrieves a comprehensive list of all employees in the system, including their personal and job-related information.",
        "operationId": "getEmployees",
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of all employees",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create a new employee",
        "description": "Creates a new employee record with the provided details, including personal information and job-related data.",
        "operationId": "createEmployee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Employee successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid employee data provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/departments": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get all departments",
        "description": "Retrieves a complete list of all departments within the organization.",
        "operationId": "getDepartments",
        "responses": {
          "200": {
            "description": "List of departments successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Create a new department",
        "description": "Creates a new department with the provided details such as name and description.",
        "operationId": "createDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepartmentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Department created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid department data provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/attendances/checkout": {
      "post": {
        "tags": [
          "Attendance"
        ],
        "summary": "Record employee check-out",
        "description": "Records the check-out time for an employee when they leave work, marking the end of their attendance for the day.",
        "operationId": "checkOut",
        "parameters": [
          {
            "name": "attendanceId",
            "in": "query",
            "description": "Attendance record ID for check-out",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "checkOutTime",
            "in": "query",
            "description": "Employee's check-out time",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Check-out successfully recorded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Attendance record not found with the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/attendances/checkin": {
      "post": {
        "tags": [
          "Attendance"
        ],
        "summary": "Record employee check-in",
        "description": "Records the check-in time for an employee when they arrive at work, logging their attendance.",
        "operationId": "checkIn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttendanceDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Check-in successfully recorded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid attendance data provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found with the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/{employeeId}": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Retrieve all performance reviews for an employee",
        "description": "Fetches the list of all performance reviews for a specific employee based on their unique employee ID, including past and current evaluations.",
        "operationId": "getReviewsByEmployeeId",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "The unique ID of the employee to retrieve performance reviews for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of performance reviews retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found for the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/employees": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get employees assigned to a project",
        "description": "Retrieves a list of employees who are currently assigned to a specific project.",
        "operationId": "getAssignedEmployees",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project to retrieve assigned employees for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of employees retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          },
          "404": {
            "description": "Project not found for the given ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred during input validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/leaves/{departmentId}": {
      "get": {
        "tags": [
          "Leave"
        ],
        "summary": "Get all leave requests by department",
        "description": "Retrieves all leave requests submitted by employees within a specific department, identified by the department ID.",
        "operationId": "getAllLeavesByDepartmentId",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the department to retrieve leave requests for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of leave requests retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found for the given ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/departments/{id}/employees": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get all employees in a department",
        "description": "Retrieves a list of employees belonging to the specified department based on the department's ID.",
        "operationId": "getEmployeesByDepartmentId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the department to retrieve employees for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of employees successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department with the specified ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/attendances/{employeeId}": {
      "get": {
        "tags": [
          "Attendance"
        ],
        "summary": "Retrieve employee attendance records",
        "description": "Fetches all attendance records for a specific employee by their ID, including check-in and check-out times.",
        "operationId": "getAttendanceRecordsByEmployeeId",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "Employee ID to retrieve attendance records",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attendance records successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceDTO"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found with the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/employees/{employeeId}": {
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Remove an employee from a project",
        "description": "Removes a specific employee from a project using both the project ID and the employee ID.",
        "operationId": "removeEmployeeFromProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project from which to remove the employee",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "ID of the employee to be removed from the project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee successfully removed from the project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            }
          },
          "404": {
            "description": "Project or employee not found for the given IDs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred during input validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete a project",
        "description": "Deletes a specific project by its ID, removing all associated data.",
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted successfully"
          },
          "404": {
            "description": "Project not found for the given ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred during input validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/departments/{id}": {
      "delete": {
        "tags": [
          "Department"
        ],
        "summary": "Delete a department",
        "description": "Deletes the department identified by the given ID from the system.",
        "operationId": "deleteDepartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the department to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Department deleted successfully"
          },
          "404": {
            "description": "Department not found for the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LeaveDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "employeeName": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "APPROVED",
              "REJECTED"
            ]
          }
        }
      },
      "ErrorResponseDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "EmployeeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "departmentName": {
            "type": "string"
          },
          "joinDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "UpdateEmployeeDTO": {
        "type": "object",
        "description": "Updated details of the employee",
        "properties": {
          "phone": {
            "type": "string",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[0-9]*$"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "ReviewDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "employeeName": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "comments": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateReviewDTO": {
        "type": "object",
        "description": "The details of the performance review being submitted, including feedback and score.",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "comments": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "maximum": 5,
            "minimum": 1
          }
        },
        "required": [
          "comments",
          "employeeId",
          "score"
        ]
      },
      "ProjectDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "deadline": {
            "type": "string",
            "format": "date"
          },
          "departmentName": {
            "type": "string"
          }
        }
      },
      "CreateProjectDTO": {
        "type": "object",
        "description": "Details required to create a new project, including project name, description, etc.",
        "properties": {
          "name": {
            "type": "string"
          },
          "deadline": {
            "type": "string",
            "format": "date"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "deadline",
          "departmentId",
          "name"
        ]
      },
      "CreateLeaveDTO": {
        "type": "object",
        "description": "Details of the leave request including dates and reason",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "employeeId",
          "endDate",
          "reason",
          "startDate"
        ]
      },
      "CreateEmployeeDTO": {
        "type": "object",
        "description": "The employee data required for creating a new employee",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[0-9]*$"
          },
          "role": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "departmentId",
          "email",
          "name",
          "phone",
          "role"
        ]
      },
      "DepartmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CreateDepartmentDTO": {
        "type": "object",
        "description": "The details of the department to be created",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "AttendanceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "employeeName": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "checkIn": {
            "type": "string",
            "format": "time",
            "example": "01:01:01"
          },
          "checkOut": {
            "type": "string",
            "format": "time",
            "example": "01:01:01"
          }
        }
      },
      "CreateAttendanceDTO": {
        "type": "object",
        "description": "Attendance details for employee check-in",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "checkInTime": {
            "type": "string",
            "format": "time",
            "example": "01:01:01"
          }
        },
        "required": [
          "checkInTime",
          "employeeId"
        ]
      }
    }
  }
}
